generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())

  users     User[]
  products  Product[]
  customers Customer[]
  orders    Order[]
}

model User {
  id         Int      @id @default(autoincrement())
  tenantId   Int
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  name       String
  email      String
  phone      String
  password   String   // hashed password
  role       String   @default("seller") // 'admin' | 'seller'
  createdAt  DateTime @default(now())

  products   Product[]

  @@unique([tenantId, email])
}

model Product {
  id                Int      @id @default(autoincrement())
  tenantId          Int
  userId            Int
  name              String
  description       String
  photoUrl          String?
  quantityAvailable Int
  contactNumber     String
  createdAt         DateTime @default(now())

  tenant            Tenant   @relation(fields: [tenantId], references: [id])
  user              User     @relation(fields: [userId], references: [id])
  orderItems        OrderItem[]
}

model Customer {
  id         Int      @id @default(autoincrement())
  tenantId   Int
  name       String
  email      String   @unique
  password   String   // hashed password
  createdAt  DateTime @default(now())

  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  orders     Order[]
}

model Order {
  id           Int      @id @default(autoincrement())
  tenantId     Int
  customerId   Int
  status       String   // 'pending' | 'paid' | 'shipped' | 'cancelled'
  totalAmount  Float
  createdAt    DateTime @default(now())

  tenant       Tenant   @relation(fields: [tenantId], references: [id])
  customer     Customer @relation(fields: [customerId], references: [id])
  items        OrderItem[]
  payment      Payment?
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int
  productId  Int
  quantity   Int
  unitPrice  Float

  order      Order    @relation(fields: [orderId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}

model Payment {
  id             Int      @id @default(autoincrement())
  orderId        Int      @unique
  amount         Float
  paymentMethod  String
  paymentStatus  String
  paidAt         DateTime

  order          Order    @relation(fields: [orderId], references: [id])
}
